% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CreateOneJointTable.R
\name{CreateOneJointTable}
\alias{CreateOneJointTable}
\title{Create Extended Main Joint Tables}
\usage{
CreateOneJointTable(main_joint_tables, db_fields, db_forced_rel,
  con = db$con, Verbose = TRUE, get_sql_query = TRUE)
}
\arguments{
\item{main_joint_tables}{A named list of tibbles/DFs (usually given by CreateMainJointTables() as a SQL DB Pointer containing all user-selected fields plus needed ones for joins}

\item{db_fields}{A DF with columns: "Include, KeyType, Table, Column, Type, RelationshipWithTable, RelationshipWithColumn, Transformation, Comment" about the User Selected fields and Relationships}

\item{db_forced_rel}{A Named String Vector. The vector names MUST point to the main table to be used for the 1-Joint-Table as its LHS. e.g. c(Hours_SiteID = "Site_SiteID", Hours_EmployeeID = "Employee_ID")}

\item{con}{is a dbConnect {DBI} connection object to a SQL Database}

\item{Verbose}{A Boolean. Verbose = TRUE will output the consecutive joins as they happen}

\item{get_sql_query}{A Boolean. get_sql_query = TRUE will create/edit the db$sql_main_joint_tables that output the SQL Code for the tables}
}
\description{
Get 1 table containing the information that main_joint_tables contained joined as given in "db_forced_rel" WITH or WITHOUT Renames as given by "db_ColumnsOldNamesToNewNames"
}
\examples{
db_forced_rel <- c(Hours_SiteID = "Site_SiteID", Hours_EmployeeID = "Employee_ID")
Example 1:
joint_table_Without_extended_joins <-
  CreateMainJointTables(db_fields, db_forced_rel, FALSE, db$con) \%>\%
  CreateOneJointTable(db_fields, db$con, db_forced_rel)

print(joint_table_Without_extended_joins)
#No renames are used and therefore no extended joins.
#This assumes that all tables can be joined together without any 1 table being needed twice.


Example 2:
joint_table_With_extended_joins <-
  CreateMainJointTables(db_fields, db_forced_rel, FALSE, db$con) \%>\%
  CreateExtendedMainJointTables(db_fields, db$con, c("DIM_Employee"), db_forced_rel) \%>\%
  CreateOneJointTable(db_fields, db$con, db_forced_rel)

print(joint_table_Without_extended_joins)
#Renames as given by "db_ColumnsOldNamesToNewNames", create extended joins on main_joint_tables for foreign tables that hold different meaning depending on which table they are joined with, and then everything is joined into 1 table as given by the relationships on "db_forced_rel"
}
\keyword{Join}
\keyword{JointTable}
\keyword{OneJointTable}
\keyword{SQL}
