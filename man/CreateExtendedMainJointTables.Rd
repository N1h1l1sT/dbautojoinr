% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CreateExtendedJoinMainJointTables.R
\name{CreateExtendedMainJointTables}
\alias{CreateExtendedMainJointTables}
\title{Create Extended Main Joint Tables}
\usage{
CreateExtendedMainJointTables(main_joint_tables, db_fields, con,
  db_forced_rel, db_TablesForColumnRenaming, db_ColumnsOldNamesToNewNames,
  Verbose = TRUE, get_sql_query = FALSE)
}
\arguments{
\item{main_joint_tables}{A named list of tibbles/DFs (usually given by CreateMainJointTables() as a SQL DB Pointer containing all user-selected fields plus needed ones for joins}

\item{db_fields}{A DF with columns: "Include, KeyType, Table, Column, Type, RelationshipWithTable, RelationshipWithColumn, Transformation, Comment" about the User Selected fields and Relationships}

\item{con}{is a dbConnect {DBI} connection object to a SQL Database}

\item{db_forced_rel}{A Named String Vector. The vector names MUST point to the main table to be used for the 1-Joint-Table as its LHS}

\item{db_TablesForColumnRenaming}{A string Vector. The names of the tables that need renaming}

\item{db_ColumnsOldNamesToNewNames}{A names List. Names correspond to the Table names, and the vectors inside will be used to renamed SQL Columns starting with db_ColumnsOldNamesToNewNames[i][j] to db_ColumnsOldNamesToNewNames[i][j+1] with j going from 1 to length of db_ColumnsOldNamesToNewNames[i] by 2}

\item{Verbose}{A Boolean. Verbose = TRUE will output the consecutive joins as they happen}

\item{get_sql_query}{A Boolean. get_sql_query = TRUE will create/edit the db$sql_main_joint_tables that output the SQL Code for the tables}
}
\description{
Get a list of all the Main tables in the database joined with all their relationships, Renaming Columns in certain tables according to "db_TablesForColumnRenaming" and then joining the renamed columns according to the relationship that exists on "db_forced_rel" for original column name (IF it exists). This way, if, for instance, both lstTables[[DIM_Employee]] and lstTables[[FACT_Work]] reference lstTables[[DIM_Site]], then Site can be renamed to MainSite and Extended_Join on lstTables[[DIM_Employee]] as this table refers to the main/base Site of the Employee, whilst lstTables[[FACT_Work]] refers to the Site the employee worked on at that point of time (row).
}
\examples{
extended_main_joint_tables <-
  CreateMainJointTables(db_fields, db_forced_rel, FALSE, db$con) \%>\%
  CreateExtendedMainJointTables(db_fields, db$con,
                                db_forced_rel = c(Hours_SiteID = "Site_SiteID", Hours_EmployeeID = "Employee_ID")
                                db_TablesForColumnRenaming = c("DIM_Employee"),
                                db_ColumnsOldNamesToNewNames =
                                  list(
                                       DIM_Employee = c(
                                                        c("Site_", "MainSite_")
                                                       )
                                       )
                                )
 
print(joint_table_With_extended_joins)
}
\keyword{ExtendedJoins}
\keyword{Join}
\keyword{MainJointTables}
\keyword{SQL}
